<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Portafolio Jostin Calderon</title>

		 <!-- Animaciones -->
  		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />



	</head>


<!-- SCRIPT PARA ANIMACIONES DE SCROLL -->
  <script>
    document.addEventListener('DOMContentLoaded', function() {
   
      const sectionObserver = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add('opacity-100', 'translate-y-0');
            entry.target.classList.remove('opacity-0', 'translate-y-10');
            
           
            const skillCards = entry.target.querySelectorAll('.skill-card');
            const projectCards = entry.target.querySelectorAll('.project-card');
            const contactBtn = entry.target.querySelector('.contact-btn');
            
            
            skillCards.forEach((card, index) => {
              setTimeout(() => {
                card.classList.add('opacity-100', 'translate-y-0');
                card.classList.remove('opacity-0', 'translate-y-8');
              }, index * 100);
            });
            
            
            projectCards.forEach((card, index) => {
              setTimeout(() => {
                card.classList.add('opacity-100', 'translate-y-0');
                card.classList.remove('opacity-0', 'translate-y-8');
              }, index * 150);
            });
            
            
            if (contactBtn) {
              setTimeout(() => {
                contactBtn.classList.add('opacity-100', 'translate-y-0');
                contactBtn.classList.remove('opacity-0', 'translate-y-4');
              }, 400);
            }
            
            sectionObserver.unobserve(entry.target);
          }
        });
      }, {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      });

      
      document.querySelectorAll('.scroll-fade').forEach((section) => {
        sectionObserver.observe(section);
      });

   
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
          e.preventDefault();
          const target = document.querySelector(this.getAttribute('href'));
          if (target) {
            target.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          }
        });
      });

   
      let ticking = false;
      function updateParallax() {
        const scrolled = window.pageYOffset;
        const parallaxElements = document.querySelectorAll('.animate-float');
        
        parallaxElements.forEach((element, index) => {
          const speed = 0.5 + (index * 0.1);
          const yPos = -(scrolled * speed);
          element.style.transform = `translateY(${yPos}px)`;
        });
        
        ticking = false;
      }

      window.addEventListener('scroll', function() {
        if (!ticking) {
          requestAnimationFrame(updateParallax);
          ticking = true;
        }
      });
    });
  </script>

	
	<body>
		<slot />
	</body>
</html>

<style is:global>
	@import "tailwindcss";
</style>


<style>
	
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}

	
</style>
